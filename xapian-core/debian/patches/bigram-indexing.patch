diff --git a/xapian-core/include/xapian/termgenerator.h b/xapian-core/include/xapian/termgenerator.h
index 29c3194..cd1b252 100644
--- a/xapian-core/include/xapian/termgenerator.h
+++ b/xapian-core/include/xapian/termgenerator.h
@@ -212,6 +212,8 @@ class XAPIAN_VISIBILITY_DEFAULT TermGenerator {
      */
     void set_termpos(Xapian::termcount termpos);
 
+    void add_bigrammable_term(const std::string & term);
+
     /// Return a string describing this object.
     std::string get_description() const;
 };
diff --git a/xapian-core/queryparser/termgenerator.cc b/xapian-core/queryparser/termgenerator.cc
index 3b2dc1a..cef61d9 100644
--- a/xapian-core/queryparser/termgenerator.cc
+++ b/xapian-core/queryparser/termgenerator.cc
@@ -60,6 +60,7 @@ TermGenerator::set_document(const Xapian::Document & doc)
 {
     internal->doc = doc;
     internal->termpos = 0;
+    internal->previous_bigramable = string();
 }
 
 const Xapian::Document &
@@ -114,6 +115,7 @@ void
 TermGenerator::increase_termpos(Xapian::termcount delta)
 {
     internal->termpos += delta;
+    internal->previous_bigramable = string();
 }
 
 Xapian::termcount
@@ -126,6 +128,13 @@ void
 TermGenerator::set_termpos(Xapian::termcount termpos)
 {
     internal->termpos = termpos;
+    internal->previous_bigramable = string();
+}
+
+void
+TermGenerator::add_bigrammable_term(const string & term)
+{
+    internal->bigram_fodder.insert(term);
 }
 
 string
diff --git a/xapian-core/queryparser/termgenerator_internal.cc b/xapian-core/queryparser/termgenerator_internal.cc
index 59c9ff9..886c522 100644
--- a/xapian-core/queryparser/termgenerator_internal.cc
+++ b/xapian-core/queryparser/termgenerator_internal.cc
@@ -273,6 +273,14 @@ endofterm:
 	    strategy == TermGenerator::STEM_NONE) {
 	    if (with_positions) {
 		doc.add_posting(prefix + term, ++termpos, wdf_inc);
+		if (prefix.empty() && bigram_fodder.find(term) != bigram_fodder.end()) {
+		    if (!previous_bigramable.empty()) {
+			doc.add_boolean_term("J" + previous_bigramable + " " + term);
+		    }
+		    previous_bigramable = term;
+		} else {
+		    previous_bigramable = string();
+		}
 	    } else {
 		doc.add_term(prefix + term, wdf_inc);
 	    }
diff --git a/xapian-core/queryparser/termgenerator_internal.h b/xapian-core/queryparser/termgenerator_internal.h
index 5bd8d08..549d0a5 100644
--- a/xapian-core/queryparser/termgenerator_internal.h
+++ b/xapian-core/queryparser/termgenerator_internal.h
@@ -27,6 +27,8 @@
 #include <xapian/termgenerator.h>
 #include <xapian/stem.h>
 
+#include <set>
+
 namespace Xapian {
 
 class Stopper;
@@ -41,6 +43,8 @@ class TermGenerator::Internal : public Xapian::Internal::intrusive_base {
     TermGenerator::flags flags;
     unsigned max_word_length;
     WritableDatabase db;
+    std::string previous_bigramable;
+    std::set<std::string> bigram_fodder;
 
   public:
     Internal() : strategy(STEM_SOME), stopper(NULL), termpos(0),
diff --git a/xapian-core/tests/termgentest.cc b/xapian-core/tests/termgentest.cc
index 9be963c..aa16e07 100644
--- a/xapian-core/tests/termgentest.cc
+++ b/xapian-core/tests/termgentest.cc
@@ -832,12 +832,33 @@ static bool test_tg_max_word_length1()
     return true;
 }
 
+static bool test_tg_phrase_bigrams()
+{
+    Xapian::TermGenerator termgen;
+    termgen.set_stemmer(Xapian::Stem("en"));
+    termgen.add_bigrammable_term("hello");
+    termgen.add_bigrammable_term("world");
+    termgen.add_bigrammable_term("mum");
+
+    Xapian::Document doc;
+    termgen.set_document(doc);
+
+    termgen.index_text("Hello everyone, I'd like to tell you about my Hello World program which my mum really wrote.  World's mum mum world hellos hello");
+    termgen.increase_termpos();
+    termgen.index_text("mum is the word, world world world");
+
+    TEST_STRINGS_EQUAL(format_doc_termlist(doc), "Jhello world Jmum mum Jmum world Jworld world Zabout:1 Zeveryon:1 Zhello:4 Zi'd:1 Zis:1 Zlike:1 Zmum:4 Zmy:2 Zprogram:1 Zrealli:1 Ztell:1 Zthe:1 Zto:1 Zwhich:1 Zword:1 Zworld:6 Zwrote:1 Zyou:1 about[8] everyone[2] hello[1,10,23] hellos[22] i'd[3] is[125] like[4] mum[15,19,20,124] my[9,14] program[12] really[16] tell[6] the[126] to[5] which[13] word[127] world[11,21,128,129,130] world's[18] wrote[17] you[7]");
+
+    return true;
+}
+
 /// Test cases for the TermGenerator.
 static const test_desc tests[] = {
     TESTCASE(termgen1),
     TESTCASE(tg_spell1),
     TESTCASE(tg_spell2),
     TESTCASE(tg_max_word_length1),
+    TESTCASE(tg_phrase_bigrams),
     END_OF_TESTCASES
 };
 
