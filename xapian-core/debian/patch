Index: backends/flint/flint_lock.cc
===================================================================
--- backends/flint/flint_lock.cc (revision 11900)
+++ backends/flint/flint_lock.cc (revision 12208)
@@ -176,4 +176,6 @@
     }
 
+    reason why = UNKNOWN;
+
     // Parent process.
     close(fds[1]);
@@ -182,20 +184,26 @@
 	int n = read(fds[0], &ch, 1);
 	if (n == 1) {
-	    reason why = static_cast<reason>(ch);
-	    if (why == SUCCESS) break; // Got the lock.
-	    close(fds[0]);
-	    return why;
+	    why = static_cast<reason>(ch);
+	    if (why != SUCCESS) break;
+	    // Got the lock.
+	    fd = fds[0];
+	    pid = child;
+	    return SUCCESS;
 	}
 	if (n == 0 || errno != EINTR) {
 	    // EOF means the lock failed; we also treat unexpected errors from
 	    // read() the same way.
-	    close(fds[0]);
-	    return UNKNOWN;
-	}
-    }
-    //shutdown(fds[0], 0); // Disable further receives.
-    fd = fds[0];
-    pid = child;
-    return SUCCESS;
+	    break;
+	}
+    }
+
+    close(fds[0]);
+
+    int status;
+    while (waitpid(pid, &status, 0) < 0) {
+	if (errno != EINTR) break;
+    }
+
+    return why;
 #endif
 }
