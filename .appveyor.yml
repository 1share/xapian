branches:
  only:
  - appveyor
skip_tags: true
environment:
  global:
    AUTOMATED_TESTING: 1
  matrix:
  # - TOOLCHAIN: mingw
  # - TOOLCHAIN: cygwin
  #   CONFIGURE_OPTS: --disable-backend-remote
  - TOOLCHAIN: msvc
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    CONFIGURE_OPTS: 'CC="cl -nologo" CXX="cl -nologo" LDADD="-link c:\projects\xapian\lib\libz.a"'
    #CONFIGURE_OPTS: CC=cl CXX=cl CPPFLAGS=-IC:\mingw\include
platform:
  - x86
install:
  - bash --version
  - bash -c 'date -u; uname -a'
  - ps: >-
      if ($env:TOOLCHAIN -eq "mingw") {
        $env:PATH="C:\Mingw\bin;C:\Mingw\MSYS\1.0\bin;$env:PATH"
      } elseif ($env:TOOLCHAIN -eq "cygwin") {
        $env:PATH="C:\cygwin64\bin;$env:PATH"
      } else {
        $env:PATH="c:\msys64\usr\bin;$env:PATH"
      }
  - bash -c 'env'
  - dir c:\msys64\usr\bin
    #- dir c:\msys64\mingw32\bin
    #- dir c:\msys64\mingw64\bin
  - if "%TOOLCHAIN%"=="mingw" bash -c "echo 'c:/mingw /mingw' >> /etc/fstab"
  - if "%TOOLCHAIN%"=="mingw" type "c:\mingw\msys\1.0\etc\fstab"
  - if "%TOOLCHAIN%"=="mingw" bash -c 'mingw-get install libz-dev'
    # 'msys-libmagic-dev'
  - if "%TOOLCHAIN%"=="cygwin" C:\cygwin64\setup-x86_64.exe -qnNdO -R C:/cygwin64 -s http://cygwin.mirror.constant.com -l C:/cygwin64/var/cache/setup -P file-devel -P libpcre-devel -P zlib-devel
    ## #  - bash -c 'mkdir -p /www/example/products'
    ## #  - bash -c 'ls -ld / /www /www/example /www/example/products'
    ## #  - bash -c 'ls -l /www/example/products'
    ## #  - bash -c 'echo "test text document" | tee /www/example/products/text.txt'
    ## #  - bash -c 'echo "<html><head><title>HTML Title</title><body>test HTML document</body></html>" | tee /www/example/products/html.htm'
    ## #  - bash -c 'wget http://easychair.org/publications/easychair-libreoffice.docx -O /www/example/products/example.docx'
    ## #  - bash -c 'wget https://www.fpsct.org/uploaded/FHS/Library/How_to_use_Wikipedia_effectively.doc -O /www/example/products/sample.doc'
    ## #  - bash -c 'ls -l /www/example/products'
  - bash -c 'time ./bootstrap xapian-core'
  - if "%TOOLCHAIN%"=="msvc" call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars32.bat"
  - if "%TOOLCHAIN%"=="msvc" bash -c 'wget -O zlib-1.2.8-1-mingw32-dev.tar.lzma http://prdownloads.sourceforge.net/mingw/zlib-1.2.8-1-mingw32-dev.tar.lzma?download'
  - if "%TOOLCHAIN%"=="msvc" bash -c 'tar -xvf zlib-1.2.8-1-mingw32-dev.tar.lzma'
  - if "%TOOLCHAIN%"=="msvc" bash -c 'ls -lR include lib mingw32'
build_script:
# 'xapian-applications/omega'
  - bash -c 'env'
  #- bash -c 'time ./configure --disable-documentation $CONFIGURE_OPTS || cat xapian-core/config.log'
  - bash -c 'time ./configure --disable-documentation CC="cl -nologo" CXX="cl -nologo" CPPFLAGS=-Ic:\projects\xapian\include LIBS="-link c:\projects\xapian\lib\libz.a" || cat xapian-core/config.log'
  - bash -c 'cat xapian-core/config.h'
  - bash -c 'time make -k -j2' < nul
test_script:
  - bash -c 'time make -k check VERBOSE=1' < nul
#  - bash -c 'xapian-applications/omega/omindex -v --db omtest.db --url msproducts /www/example/products/'
#  - bash -c 'xapian-core/bin/xapian-delve omtest.db'
