branches:
  only:
  - appveyor
skip_tags: true
environment:
  global:
    AUTOMATED_TESTING: 1
  matrix:
  # - TOOLCHAIN: mingw
  - TOOLCHAIN: cygwin
  - TOOLCHAIN: msvc
    VSVER: 14
    CONFIGURE_OPTS: CC=cl CXX=cl
platform:
  - x86
install:
  - bash --version
  - bash -c 'date -u; uname -a'
  - ps: >-
      if ($env:TOOLCHAIN -eq "mingw") {
        $env:PATH="C:\Mingw\bin;C:\Mingw\MSYS\1.0\bin;$env:PATH"
      } elseif ($env:TOOLCHAIN -eq "cygwin") {
        $env:PATH="C:\cygwin\bin;$env:PATH"
      } else {
        $env:PATH="C:\Mingw\bin;C:\Mingw\MSYS\1.0\bin;$env:PATH"
        $env:VSCOMNTOOLS=(Get-Content ("env:VS" + "$env:VSVER" + "0COMNTOOLS"))
      }
  - if "%TOOLCHAIN%"=="mingw" bash -c "echo 'c:/mingw /mingw' >> /etc/fstab"
  - if "%TOOLCHAIN%"=="mingw" type "c:\mingw\msys\1.0\etc\fstab"
  - if "%TOOLCHAIN%"=="mingw" bash -c 'mingw-get install libz-dev'
    # 'msys-libmagic-dev'
  - if "%TOOLCHAIN%"=="cygwin" C:\cygwin\setup-x86.exe -qnNdO -R C:/cygwin -s http://cygwin.mirror.constant.com -l C:/cygwin/var/cache/setup -P file-devel -P libpcre-devel
    ## #  - bash -c 'mkdir -p /www/example/products'
    ## #  - bash -c 'ls -ld / /www /www/example /www/example/products'
    ## #  - bash -c 'ls -l /www/example/products'
    ## #  - bash -c 'echo "test text document" | tee /www/example/products/text.txt'
    ## #  - bash -c 'echo "<html><head><title>HTML Title</title><body>test HTML document</body></html>" | tee /www/example/products/html.htm'
    ## #  - bash -c 'wget http://easychair.org/publications/easychair-libreoffice.docx -O /www/example/products/example.docx'
    ## #  - bash -c 'wget https://www.fpsct.org/uploaded/FHS/Library/How_to_use_Wikipedia_effectively.doc -O /www/example/products/sample.doc'
    ## #  - bash -c 'ls -l /www/example/products'
  - bash -c 'time ./bootstrap xapian-core'
  - if "%TOOLCHAIN%"=="msvc" call "%VSCOMNTOOLS%\..\..\VC\vcvarsall.bat" x86
  - if "%TOOLCHAIN%"=="msvc" nuget install pcre -Verbosity quiet -Version 8.33.0.1 -OutputDirectory C:\pcre
  - if "%TOOLCHAIN%"=="msvc" nuget install zlib -Verbosity quiet -OutputDirectory C:\zlib
build_script:
# 'xapian-applications/omega'
  - bash -c 'time ./configure --disable-documentation $CONFIGURE_OPTS'
  - bash -c 'cat xapian-core/config.h'
  - bash -c 'time make -k -j2' < nul
test_script:
  - bash -c 'time make -k check VERBOSE=1' < nul
#  - bash -c 'xapian-applications/omega/omindex -v --db omtest.db --url msproducts /www/example/products/'
#  - bash -c 'xapian-core/bin/xapian-delve omtest.db'
