### diff -ru a/configure b/configure
### --- a/configure	2017-06-19 05:35:03.000000000 +1200
### +++ b/configure	2017-10-22 18:14:43.401629103 +1300
### @@ -4868,6 +4880,64 @@
###  ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
###  ac_compiler_gnu=$ac_cv_c_compiler_gnu
###  
### +ac_ext=cpp
### +ac_cpp='$CXXCPP $CPPFLAGS'
### +ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
### +ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
### +ac_compiler_gnu=$ac_cv_cxx_compiler_gnu
### +{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether $CXX understands -c and -o together" >&5
### +$as_echo_n "checking whether $CXX understands -c and -o together... " >&6; }
### +if ${am_cv_prog_cxx_c_o+:} false; then :
### +  $as_echo_n "(cached) " >&6
### +else
### +  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
### +/* end confdefs.h.  */
### +
### +int
### +main ()
### +{
### +
### +  ;
### +  return 0;
### +}
### +_ACEOF
### +  # Following AC_PROG_CC_C_O, we do the test twice because some
### +  # compilers refuse to overwrite an existing .o file with -o,
### +  # though they will create one.
### +  am_cv_prog_cxx_c_o=yes
### +  for am_i in 1 2; do
### +    if { echo "$as_me:$LINENO: $CXX -c conftest.$ac_ext -o conftest2.$ac_objext" >&5
### +   ($CXX -c conftest.$ac_ext -o conftest2.$ac_objext) >&5 2>&5
### +   ac_status=$?
### +   echo "$as_me:$LINENO: \$? = $ac_status" >&5
### +   (exit $ac_status); } \
### +         && test -f conftest2.$ac_objext; then
### +      : OK
### +    else
### +      am_cv_prog_cxx_c_o=no
### +      break
### +    fi
### +  done
### +  rm -f core conftest*
### +  unset am_i
### +fi
### +{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $am_cv_prog_cxx_c_o" >&5
### +$as_echo "$am_cv_prog_cxx_c_o" >&6; }
### +if test "$am_cv_prog_cxx_c_o" != yes; then
### +   # Losing compiler, so override with the script.
### +   # FIXME: It is wrong to rewrite CXX.
### +   # But if we don't then we get into trouble of one sort or another.
### +   # A longer-term fix would be to have automake use am__CXX in this case,
### +   # and then we could set am__CXX="\$(top_srcdir)/compile \$(CXX)"
### +   CXX="$am_aux_dir/compile $CXX"
### +fi
### +ac_ext=c
### +ac_cpp='$CPP $CPPFLAGS'
### +ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
### +ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
### +ac_compiler_gnu=$ac_cv_c_compiler_gnu
### +
### +
###       break
###    done
###    if test $am__failed = yes; then :
diff -ru a/lib/ar-lib b/lib/ar-lib
--- a/lib/ar-lib	2017-06-17 08:46:16.000000000 +1200
+++ b/lib/ar-lib	2017-10-22 17:42:36.164717668 +1300
@@ -53,7 +53,7 @@
 	  MINGW*)
 	    file_conv=mingw
 	    ;;
-	  CYGWIN*)
+	  CYGWIN* | MSYS*)
 	    file_conv=cygwin
 	    ;;
 	  *)
diff -ru a/lib/compile b/lib/compile
--- a/lib/compile	2017-06-17 08:46:16.000000000 +1200
+++ b/lib/compile	2017-10-22 17:42:48.360735117 +1300
@@ -53,7 +53,7 @@
 	  MINGW*)
 	    file_conv=mingw
 	    ;;
-	  CYGWIN*)
+	  CYGWIN* | MSYS*)
 	    file_conv=cygwin
 	    ;;
 	  *)
@@ -143,7 +143,7 @@
 	  # configure might choose to run compile as 'compile cc -o foo foo.c'.
 	  eat=1
 	  case $2 in
-	    *.o | *.[oO][bB][jJ])
+	    *.o | *.lo | *.[oO][bB][jJ])
 	      func_file_conv "$2"
 	      set x "$@" -Fo"$file"
 	      shift
### diff -ru a/m4/init.m4 b/m4/init.m4
### --- a/m4/init.m4	2017-06-17 13:28:31.000000000 +1200
### +++ b/m4/init.m4	2017-10-22 14:28:57.382280315 +1300
### @@ -15,6 +15,12 @@
###  [_AM_PROG_CC_C_O
###  ])
###  
### +dnl Redefine AC_PROG_CXX to automatically invoke _AM_PROG_CXX_C_O.
### +m4_define([AC_PROG_CXX],
### +m4_defn([AC_PROG_CXX])
### +[_AM_PROG_CXX_C_O
### +])
### +
###  # AM_INIT_AUTOMAKE(PACKAGE, VERSION, [NO-DEFINE])
###  # AM_INIT_AUTOMAKE([OPTIONS])
###  # -----------------------------------------------
### diff -ru a/m4/prog-cc-c-o.m4 b/m4/prog-cc-c-o.m4
### --- a/m4/prog-cc-c-o.m4	2017-06-17 08:46:16.000000000 +1200
### +++ b/m4/prog-cc-c-o.m4	2017-10-22 14:31:37.486572454 +1300
### @@ -45,3 +45,40 @@
###  
###  # For backward compatibility.
###  AC_DEFUN_ONCE([AM_PROG_CC_C_O], [AC_REQUIRE([AC_PROG_CC])])
### +
### +# _AM_PROG_CXX_C_O
### +# ---------------
### +# Like _AM_PROG_CC_C_O but for the C++ compiler.  We rewrite AC_PROG_CXX
### +# to automatically call this.
### +AC_DEFUN([_AM_PROG_CXX_C_O],
### +[AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
### +AC_REQUIRE_AUX_FILE([compile])dnl
### +AC_LANG_PUSH([C++])dnl
### +AC_CACHE_CHECK(
### +  [whether $CXX understands -c and -o together],
### +  [am_cv_prog_cxx_c_o],
### +  [AC_LANG_CONFTEST([AC_LANG_PROGRAM([])])
### +  # Following AC_PROG_CC_C_O, we do the test twice because some
### +  # compilers refuse to overwrite an existing .o file with -o,
### +  # though they will create one.
### +  am_cv_prog_cxx_c_o=yes
### +  for am_i in 1 2; do
### +    if AM_RUN_LOG([$CXX -c conftest.$ac_ext -o conftest2.$ac_objext]) \
### +         && test -f conftest2.$ac_objext; then
### +      : OK
### +    else
### +      am_cv_prog_cxx_c_o=no
### +      break
### +    fi
### +  done
### +  rm -f core conftest*
### +  unset am_i])
### +if test "$am_cv_prog_cxx_c_o" != yes; then
### +   # Losing compiler, so override with the script.
### +   # FIXME: It is wrong to rewrite CXX.
### +   # But if we don't then we get into trouble of one sort or another.
### +   # A longer-term fix would be to have automake use am__CXX in this case,
### +   # and then we could set am__CXX="\$(top_srcdir)/compile \$(CXX)"
### +   CXX="$am_aux_dir/compile $CXX"
### +fi
### +AC_LANG_POP([C++])])
