dist: xenial
language: cpp
notifications:
  irc: "chat.freenode.net#xapian-devel"
env:
  global:
    - HOMEBREW_PACKAGES='doxygen help2man graphviz pngcrush libiconv libmagic pcre lua mono python2 python'
matrix:
  include:
    - compiler: gcc
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - doxygen
            - graphviz
            - help2man
            - python-docutils
            - pngcrush
            - python-sphinx
            - uuid-dev
            - libpcre3-dev
            - libmagic-dev
            - lua5.3
            - liblua5.3-dev
            - mono-devel
            - python-dev
            - python3-dev
            - tcl
            - gcc-4.7
            - g++-4.7
      env: USE_CC=gcc-4.7 USE_CXX=g++-4.7 CPPFLAGS=-D_GLIBCXX_DEBUG
    - compiler: clang
      os: linux
      # Clang is already installed, but we want to build using the
      # llvm c++ library, not the GCC one. (Otherwise, depending on
      # the GCC version, there can be issues.)
      addons:
        apt:
          packages:
            - doxygen
            - graphviz
            - help2man
            - python-docutils
            - pngcrush
            - python-sphinx
            - uuid-dev
            - libpcre3-dev
            - libmagic-dev
            - tcl
            - libc++-dev
      # We also have to disable an error, because (older?)
      # perl header files don't play nicely with clang.
      env: USE_CC=clang USE_CXX='clang++ -stdlib=libc++' CXXFLAGS=-Wno-error=reserved-user-defined-literal
    - compiler: gcc
      os: linux
      # Test with trusty as it has GCC 4.8 which is the oldest GCC we currently
      # aim to support.
      dist: trusty
      addons:
        apt:
          packages:
            - doxygen
            - graphviz
            - help2man
            - python-docutils
            - pngcrush
            - python-sphinx
            - uuid-dev
            - libpcre3-dev
            - libmagic-dev
            - lua5.2
            - liblua5.2-dev
            - mono-devel
            - python-dev
            - python3-dev
            - tcl
            - libsvm-dev
    - os: osx
      before_install:
        - brew update
        # "brew install" unhelpfully errors out if any package listed is
        # already installed and up-to-date, but travis change what's installed
        # by default from time to time so it's brittle to just filter out those
        # installed by default from the list we need.  Instead we ignore the
        # exit status from "brew install", then check later that
        # "brew list --versions" says all the packages requested are installed.
        - brew install $HOMEBREW_PACKAGES || true
        - brew list --versions $HOMEBREW_PACKAGES
        - pip2 install sphinx docutils
        - pip3 install sphinx
      env: PYTHON2=/usr/local/bin/python2 CXXFLAGS=-Wno-error=reserved-user-defined-literal confargs='--prefix=/Users/travis/XapianInstall --with-libiconv-prefix=/usr/local/opt/libiconv' installcore='make -C xapian-core install'
    - os: linux
      # (Ab)use env to label this build:
      env: dummy="Automated run of xapian-check-patch"
      # Override before_script to do nothing
      before_script:
      # Override script to diff from against the branch point from:
      # * for a PR, the branch the PR targets
      # * otherwise, master
      script:
        - git diff `[ "$TRAVIS_PULL_REQUEST" = false ] && echo master || echo "$TRAVIS_BRANCH"`...|xapian-maintainer-tools/xapian-check-patch


before_script:
  # Bootstrap everything, then configure using our chosen compiler.
  - ./bootstrap
  - ./configure $confargs CC="$USE_CC" CXX="$USE_CXX"
script:
  - make
  - $installcore
  - make check VERBOSE=1 AUTOMATED_TESTING=1
  # grep '^' passes through all input while giving a non-zero exit status if
  # that input is empty.
  - git status --porcelain|grep '^' && { echo "The generated files listed above are not in .gitignore" ; exit 1; }; true
